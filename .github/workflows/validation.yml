name: Deploy to Salesforce (src format)

on:
  pull_request:
    branches:
      - main

env:
  TARGET_ORG: augsanbox  # alias from your auth step

jobs:
  SFDX-CLI-Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: echo "🐧 GitHub Action running on ${{ runner.os }}"

      # Checkout the branch that triggered the PR
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sf --version

      - name: Setup Python Environment
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install xq yq

      - name: Authenticate Salesforce Org
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > sfdx-auth-url.txt
          sf org login sfdx-url --sfdx-url-file sfdx-auth-url.txt --alias $TARGET_ORG --set-default

      - name: Debug Test Classes File
        run: cat test-classes.txt || echo "test-classes.txt not found"

      - name: Read Test Class Names from File
        id: read-test-classes
        run: |
          TEST_CLASSES=$(cat test-classes.txt 2>/dev/null | tr '\n' ',' | sed 's/,$//')
          if [ -z "$TEST_CLASSES" ]; then
            echo "TEST_CLASSES=" >> $GITHUB_ENV
            echo "RUN_TESTS=false" >> $GITHUB_ENV
          else
            echo "TEST_CLASSES=$TEST_CLASSES" >> $GITHUB_ENV
            echo "RUN_TESTS=true" >> $GITHUB_ENV
          fi

      - name: Install sfdx-git-delta
        run: |
          echo y | sf plugins install sfdx-git-delta

      - name: Generate Delta between main and PR Branch
        run: |
          IGNORE_FILE=".github/workflows/ignore.txt"
          if [ -f "$IGNORE_FILE" ]; then
            sf sgd source delta --to "HEAD" --from "origin/main" --output "." --ignore $IGNORE_FILE
          else
            sf sgd source delta --to "HEAD" --from "origin/main" --output "."
          fi

      - name: Update API Version in package.xml
        run: |
          sed -i 's|<version>55.0</version>|<version>61.0</version>|g' package/package.xml
          cat package/package.xml

      - name: Debug Environment Variables
        run: |
          echo "TEST_CLASSES=${{ env.TEST_CLASSES }}"
          echo "RUN_TESTS=${{ env.RUN_TESTS }}"

      - name: Validate Delta Components with Tests Handling
        run: |
          if [ "${{ env.RUN_TESTS }}" == "true" ]; then
          echo "Running specified tests: ${{ env.TEST_CLASSES }}"
            sf project deploy validate \
                --manifest package/package.xml \
                --test-level RunSpecifiedTests \
                --tests "${{ env.TEST_CLASSES }}" \
                --target-org $TARGET_ORG \
                --api-version 61.0
            else
            echo "No test classes specified. Running all local tests to deploy other components."
            sf project deploy validate \
                --manifest package/package.xml \
                --test-level RunLocalTests \
                --target-org $TARGET_ORG \
                --api-version 61.0
            fi

